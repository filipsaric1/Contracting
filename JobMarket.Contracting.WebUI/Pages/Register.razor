@page "/register"

@inject AppState _appState
@inject NavigationManager _uriHelper

@if (string.IsNullOrWhiteSpace(errorMessage) == false)
{
    <div class="alert alert-danger">@errorMessage</div>
}
else
{
    <h1 class="text-center">Register</h1>
    <div class="container">
        <div class="row">
            <div class="col-md-4 offset-md-4">
                <EditForm Model="user" OnValidSubmit="RegisterUser">
                    <DataAnnotationsValidator />
                    <div class="form-group">
                        <InputText type="text" @bind-Value=@user.Email placeholder="E-mail" class="form-control" />
                        <ValidationMessage For="() => user.Email" />
                    </div>
                    <div class="form-group">
                        <InputText type="password" @bind-Value=@user.Password placeholder="Password" class="form-control" />
                        <ValidationMessage For="() => user.Password" />
                    </div>
                    <div class="form-group">
                        <button class="btn btn-primary btn-block" type="submit">Register</button>
                    </div>
                </EditForm>
            </div>
        </div>
    </div>
}

@code {
    RegisterDto user = new RegisterDto();
    string errorMessage;

    protected async Task RegisterUser()
    {
        await _appState.Register(user);

        if (_appState.IsLoggedIn())
        {
            _uriHelper.NavigateTo("/", true);
        }
        else
        {
            errorMessage = "Something went wrong. Please try again.";
        }
    }
}